The `-moz-user-focus` property was a non-standard CSS property that was used in older versions of Mozilla Firefox to control whether an element can receive focus when using keyboard navigation. It was part of the Mozilla-specific `-moz` prefix and was never part of the CSS standard. However, as of my last knowledge update in September 2021, this property is deprecated and not recommended for use in modern browsers, including recent versions of Firefox.

Given that this property is obsolete and not widely supported, I'll provide an example and explanation of how it used to work:

**Example:**
```html
<!DOCTYPE html>
<html>
<head>
<style>
  .focusable-element {
    -moz-user-focus: normal; /* Allow the element to receive focus */
  }
</style>
</head>
<body>

<input type="text" class="focusable-element" placeholder="Type here">

</body>
</html>
```

**Why:**
The `-moz-user-focus` property was used in Mozilla Firefox to control whether an element could receive focus when navigating through the webpage using a keyboard.

**Where:**
In the context of its historical usage, the `-moz-user-focus` property could be applied to elements to determine whether they could be focused via keyboard navigation.

**How:**
The `-moz-user-focus` property accepted values like `normal` and `ignore` to control whether the element could be focused.

**SEO:**
The `-moz-user-focus` property and its usage have no direct impact on SEO, as it was a browser-specific and non-standard feature related to user interactions.

**Additional Notes:**
- The `-moz-user-focus` property was specific to Mozilla Firefox and was not part of the CSS standard.
- Modern browsers, including newer versions of Firefox, no longer support this property.
- For controlling the focus behavior of elements, use standard HTML attributes like `tabindex` and `aria` attributes for accessibility.

**Browser Support:**
The `-moz-user-focus` property was supported only in older versions of Mozilla Firefox. It is no longer supported in modern browsers. Always prioritize using standard practices for managing focus and accessibility to ensure compatibility across different browsers.