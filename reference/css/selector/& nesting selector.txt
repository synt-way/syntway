It seems there might be a typo in your question. You mentioned "& nesting selector," but it's not a standard term or feature in CSS. CSS doesn't have a specific "&" selector or nesting selector.

However, it's possible that you are referring to the "descendant combinator" (` `) or the "child combinator" (`>`), which are used for selecting nested elements. Let's discuss both possibilities:

**Descendant Combinator (` `):**
The descendant combinator allows you to select elements that are descendants of another element, regardless of how deeply nested they are in the HTML structure.

**Syntax:**
```css
ancestor descendant {
  /* CSS styles here */
}
```

**Example:**
```html
<div class="container">
  <p>This is a paragraph inside a container.</p>
</div>
```

You can use the descendant combinator to style the paragraph inside the container:

```css
.container p {
  /* CSS styles here */
}
```

**Child Combinator (`>`):**
The child combinator selects elements that are direct children of another element. It does not select nested descendants beyond the immediate children.

**Syntax:**
```css
parent > child {
  /* CSS styles here */
}
```

**Example:**
```html
<ul class="menu">
  <li>Item 1</li>
  <li>Item 2</li>
  <li>
    <ul>
      <li>Subitem 1</li>
      <li>Subitem 2</li>
    </ul>
  </li>
</ul>
```

To select only the top-level list items within the `.menu` element, you can use the child combinator:

```css
.menu > li {
  /* CSS styles here */
}
```

**Why Use Descendant and Child Combinators:**
These combinators help you apply styles to specific elements within a nested HTML structure. They are useful for targeting elements in a more granular way without affecting other elements on the page.

**Where to Use Descendant and Child Combinators:**
You can use these combinators in your CSS stylesheets to target and style elements that are nested within other elements.

**SEO (Search Engine Optimization) Considerations:**
Using descendant and child combinators itself doesn't have a direct impact on SEO. However, maintaining a well-structured HTML document by using appropriate HTML elements and nesting when necessary can improve your website's SEO.

**Additional Notes:**
- Be cautious when using descendant combinators excessively, as they can lead to overly specific and less maintainable CSS.
- Child combinators are often preferred when you want to style only the immediate children of an element, avoiding the styling of deeply nested elements.

**Browser Support:**
Both the descendant combinator and child combinator are well-supported in modern web browsers, including Chrome, Firefox, Safari, Edge, and Internet Explorer 7 and later. They are fundamental CSS features that have been supported for a long time.