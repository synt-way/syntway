The `bottom` property in CSS is used to position an element relative to its containing element, or, if the element is positioned, it sets the distance between the element's bottom edge and the bottom edge of its containing element. It's commonly used in conjunction with the CSS `position` property to control the vertical positioning of an element.

**Syntax:**
```css
element {
  position: relative; /* or absolute, fixed, etc. */
  bottom: value;
}
```

Replace `value` with the desired distance or length measurement. It can be in pixels (px), percentages (%), em, or other length units.

**Example:**
```css
/* Position an element 20px above its default position */
.element {
  position: relative;
  bottom: 20px;
}
```

In this example, the `.element` will be moved 20 pixels up from its default position.

**Where to use `bottom`?**
The `bottom` property is used within your CSS styles and is often employed when you want to adjust the vertical position of an element. It's effective when combined with a `position` value of `relative`, `absolute`, or `fixed`.

**SEO Implications:**
The `bottom` property itself doesn't have direct SEO implications. SEO primarily focuses on content, keywords, page structure, and meta information.

**Additional Notes:**
- When an element's `position` is set to `relative`, the `bottom` value moves the element from its original position.
- When an element's `position` is set to `absolute` or `fixed`, the `bottom` value positions the element relative to its containing element.

**Browser Support:**
As of my last update in September 2021, the `bottom` property is widely supported in modern browsers. However, it's always a good practice to verify the latest browser compatibility information on websites like MDN Web Docs or Can I use.

I hope this explanation clarifies the usage and significance of the `bottom` property. If you have more questions or need further assistance, feel free to ask!