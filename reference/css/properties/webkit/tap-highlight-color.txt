The `-webkit-tap-highlight-color` property is a non-standard CSS property used in older versions of WebKit-based browsers (such as Safari) to control the color of the tap highlight that appears when a user taps on an element on a touch-enabled device. This tap highlight is a visual feedback to indicate which element has been tapped. As of my last knowledge update in September 2021, this property is still supported in WebKit-based browsers like Safari, but it's not part of the CSS standard and is not supported in other modern browsers like Chrome or Firefox.

**Example:**
```html
<!DOCTYPE html>
<html>
<head>
<style>
  .tappable-element {
    -webkit-tap-highlight-color: rgba(255, 0, 0, 0.5); /* Set the tap highlight color */
  }
</style>
</head>
<body>

<div class="tappable-element">
  Tap me!
</div>

</body>
</html>
```

**Why:**
The `-webkit-tap-highlight-color` property was used to customize the appearance of the tap highlight that appears when an element is tapped on a touch-enabled device. It allowed developers to create a more consistent and visually appealing user experience.

**Where:**
In the context of its historical usage, the `-webkit-tap-highlight-color` property could be applied to elements that needed to have a custom tap highlight color.

**How:**
The `-webkit-tap-highlight-color` property accepted color values, such as hexadecimal or RGB values, to specify the color of the tap highlight.

**SEO:**
The `-webkit-tap-highlight-color` property and its usage have no direct impact on SEO, as it's primarily a styling property that affects the user experience on touch devices.

**Additional Notes:**
- `-webkit-tap-highlight-color` is specific to WebKit-based browsers like Safari and is not part of the CSS standard.
- While this property can be used to customize the tap highlight color, it's important to ensure that the chosen color provides sufficient contrast with the background and maintains good usability.

**Browser Support:**
The `-webkit-tap-highlight-color` property is supported in older versions of WebKit-based browsers like Safari. It's not supported in other modern browsers like Chrome or Firefox. When using this property, consider providing alternative styles for other browsers or using other techniques for broader compatibility.