The `appearance` property in CSS is used to control the appearance of form controls, making them look like native UI elements or applying custom styles. It's used to make elements like checkboxes, radio buttons, and select boxes look consistent across different browsers or to apply custom designs to them.

**Example:**
```css
.custom-checkbox {
  appearance: none; /* Disable default appearance */
  -webkit-appearance: none; /* For WebKit browsers like Chrome and Safari */
  background-color: white;
  border: 1px solid #ccc;
  width: 16px;
  height: 16px;
}

.custom-checkbox:checked {
  background-color: #007bff;
}
```

**Why:**
The `appearance` property is used to control the visual style of form controls to ensure a consistent look across different browsers and to allow for custom styling that aligns with a website's design.

**Where:**
Apply the `appearance` property to form controls like checkboxes, radio buttons, and select boxes to style them according to your design.

**How:**
The `appearance` property accepts values like `none`, which removes the default appearance, and vendor-prefixed values like `-webkit-appearance` for specific browser implementations.

**SEO:**
The `appearance` property and its use in styling form controls have no direct impact on SEO. However, maintaining a consistent and user-friendly design through styling can contribute to a better user experience.

**Additional Notes:**
- Browser support for the `appearance` property varies, and vendor prefixes are often required to ensure consistent styling.
- Use of the `appearance` property might be limited to specific form elements, and its behavior may change based on browser versions.
- The `appearance` property can be used to create custom-styled form controls that better match a website's overall design.

**Browser Support:**
The `appearance` property has limited support and its behavior can vary across browsers. It is supported with vendor prefixes in some browsers like Chrome and Safari. Always test thoroughly in different browsers to ensure desired behavior and consistent styling.